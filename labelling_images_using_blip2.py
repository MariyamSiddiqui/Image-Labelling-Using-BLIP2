# -*- coding: utf-8 -*-
"""Labelling Images Using BLIP2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_pveHlBjSDUZd17Xb3bFj4nLjh4WmIpD

#**This notebook shows how to use BLIP-2 to label images automatically and upload the labeled dataset to Hugging Face.**
"""

# This installs Git Large File Storage to manage big files in Git (like models or datasets)

!apt-get install git-lfs

# Installs tools for fast model training, memory-efficient loading, dataset handling, and Hugging Face hub connection.

!pip install -q accelerate bitsandbytes datasets huggingface_hub

# Logs you into your Hugging Face account to upload or access models and datasets.

from huggingface_hub import notebook_login

notebook_login()

# CUDA is NVIDIA’s tool that lets your GPU speed up AI and machine learning computations.

import torch

# Use GPU if available
if torch.cuda.is_available():
    device = torch.device("cuda")
else:
    device = torch.device("cpu")

def add_images(idx):
    from transformers import AutoProcessor, Blip2ForConditionalGeneration
    import torch
    from PIL import Image
    import requests

    model_name = "Salesforce/blip2-flan-t5-xl"  # smaller model fits on Colab
    processor = AutoProcessor.from_pretrained(model_name)
    model = Blip2ForConditionalGeneration.from_pretrained(model_name, device_map="auto")

    image_url = f"{url}/{idx}.jpeg"
    image = Image.open(requests.get(image_url, stream=True).raw)

    prompt = "Question: What is in this image? Answer:"
    inputs = processor(image, text=prompt, return_tensors="pt").to("cuda" if torch.cuda.is_available() else "cpu")

    generated_ids = model.generate(**inputs, max_new_tokens=20)
    label = processor.batch_decode(generated_ids, skip_special_tokens=True)[0].strip()

    return {"image": image, "label": label}

"""We’re now ready to upload our dataset to the Hugging Face Hub. There are two main ways to do this:

Using an image folder along with a metadata JSONL file

Using a generator
"""

from datasets import Dataset

username = "mariyamsiddiqui"
repo_id = "labeled_images_using_BLIP2"

# Create a dataset from the generator
ds = Dataset.from_generator(generate_entries)
ds.push_to_hub(f"{username}/{repo_id}")

from datasets import load_dataset

# Load the dataset
dataset = load_dataset("mariyamsiddiqui/labeled_images_using_BLIP2")

dataset["train"]["image"][0]

dataset["train"]["label"][0]